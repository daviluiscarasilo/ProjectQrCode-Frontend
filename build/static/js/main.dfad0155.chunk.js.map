{"version":3,"sources":["components/Cabecalho.js","components/Rodape.js","constants/config.js","pages/Home.js","routes/Rotas.js","App.js","index.js"],"names":["Cabecalho","Navbar","className","Brand","href","Nav","Link","Rodape","bg","BACKEND","QRCode","require","Home","valorInicial","useState","produto","setProduto","produtos","setProdutos","carregandoprodutos","setCarregandoprodutos","salvandoprodutos","setSalvandoprodutos","confirmaExclusao","setConfirmaExclusao","aviso","setAviso","erros","setErros","numeroIdentificacao","descricao","preco","atributos","negocio","status","obterprodutos","a","url","fetch","then","response","json","data","console","log","catch","error","message","useEffect","document","title","validaErrosproduto","novosErros","length","test","replaceAll","split","alteraDadosproduto","e","target","name","value","preventDefault","Object","keys","metodo","hasOwnProperty","method","headers","Accept","body","JSON","stringify","_id","Container","fluid","Row","style","marginTop","marginBottom","Col","xs","lg","Form","Group","as","controlId","Label","column","Control","placeholder","onChange","isInvalid","Feedback","type","Check","label","checked","Button","marginRight","variant","onClick","salvarproduto","Spinner","animation","size","Table","striped","bordered","hover","map","item","Date","createdAt","toLocaleDateString","window","scrollTo","MySwal","withReactContent","Swal","fire","didOpen","clickConfirm","qrCodeValue","QrcodeAlert","colSpan","Modal","show","onHide","Header","Title","Body","Footer","excluirproduto","Toast","onClose","delay","autohide","position","top","right","Rotas","exact","path","component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dfad0155.chunk.js","sourcesContent":["import React from 'react'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\n\n\nimport {\n   MdDescription, MdHome,\n  MdMailOutline, MdCollectionsBookmark\n} from 'react-icons/md'\n\nconst Cabecalho = () => {\n  return (\n    <Navbar className=\"cabecalho\">\n      <Navbar.Brand href=\"#home\"><MdCollectionsBookmark /></Navbar.Brand>\n      <Nav className=\"mr-auto\">\n        <Nav.Link href=\"#/home\" className=\"active\"><MdHome /> Home</Nav.Link>\n      </Nav>\n    </Navbar>\n  )\n}\n\nexport default Cabecalho","import React from 'react'\nimport Navbar from 'react-bootstrap/Navbar'\n\nimport { MdCollectionsBookmark } from 'react-icons/md'\n\nconst Rodape = () => {\n    return (\n<Navbar bg=\"dark\" >\n    <Navbar.Brand href=\"#inicio\" className=\"text-light\">\n        <MdCollectionsBookmark/> Developed by: Davi L. Carasilo and Pedro Spinardi -- 2021 A Fatec’s project\n    </Navbar.Brand>\n</Navbar>\n    )\n}\n\nexport default Rodape","export const BACKEND = \"https://backendprojectqrcode.herokuapp.com\"\n\nconst config = { BACKEND }\n\nexport default config","import React, { useEffect, useState } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\nimport Toast from 'react-bootstrap/Toast'\n\nimport Cabecalho from '../components/Cabecalho'\nimport Rodape from '../components/Rodape'\nimport { BACKEND } from '../constants'\n\nimport Swal from 'sweetalert2'\nimport withReactContent from 'sweetalert2-react-content'\n\nimport { MdSave, MdModeEdit, MdDelete, MdCancel } from 'react-icons/md'\nimport { FaQrcode } from 'react-icons/fa'\nimport { isNumberLiteral } from '@babel/types'\nvar QRCode = require('qrcode.react');\n\n\nconst Home = () => {\n\n    const valorInicial = {\n\n        \"status\": \"ativo\",\n        \"numeroIdentificacao\": \"\",\n        \"descricao\": \"\",\n        \"preco\": 0,\n        \"atributos\": \"\",\n        \"negocio\": \"\",\n    }\n\n    const [produto, setProduto] = useState(valorInicial)\n    const [produtos, setProdutos] = useState([])\n    const [carregandoprodutos, setCarregandoprodutos] = useState(false)\n    const [salvandoprodutos, setSalvandoprodutos] = useState(false)\n    const [confirmaExclusao, setConfirmaExclusao] = useState(false)\n\n    const [aviso, setAviso] = useState('')\n    const [erros, setErros] = useState({})\n\n    const { numeroIdentificacao, descricao, preco, atributos, negocio, status } = produto\n\n    async function obterprodutos() {\n        setCarregandoprodutos(true)\n        let url = `${BACKEND}/produtos`\n        await fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                setProdutos(data)\n                console.log(data)\n            })\n            .catch(function (error) {\n                console.error(`Erro ao obter as produtos: ${error.message}`)\n            })\n        setCarregandoprodutos(false)\n\n    }\n\n    useEffect(() => {\n        document.title = 'Cadastro de produtos'\n        obterprodutos()\n    }, [])\n\n    const validaErrosproduto = () => {\n        const re = /^[0-9\\b]+$/;\n\n        const novosErros = {}\n        //Validação de Código identificação\n        if (!numeroIdentificacao || numeroIdentificacao === '') novosErros.numeroIdentificacao = 'O código de identificação não pode ser vazio'\n        else if (numeroIdentificacao.length > 20) novosErros.numeroIdentificacao = 'O código de identificação informado é muito longo'\n        else if (numeroIdentificacao.length < 5) novosErros.numeroIdentificacao = 'O código de identificação informado é muito curto'\n\n        //Validação de Descrição\n        if (!descricao || descricao === '') novosErros.descricao = 'A descrição não pode ser vazia'\n        else if (descricao.length > 300) novosErros.descricao = 'A descrição informada é muito longa'\n\n        //Validação de Atributos\n        if (!atributos || atributos === '') novosErros.atributos = 'O atributo não pode ser vazio'\n        else if (atributos.length > 300) novosErros.atributos = 'O atributo  informado é muito longo'\n\n\n        //Validação de Negocio\n        if (!negocio || negocio === '') novosErros.negocio = 'O negócio não pode ser vazio'\n        else if (negocio.length > 300) novosErros.negocio = 'O negócio  informado é muito longo'\n        debugger;\n        //Validação de Negocio\n        if (!preco || preco === '') novosErros.preco = 'O preço não pode ser vazio'\n        else if (!re.test((preco + \"\").replaceAll(\".\", \"\"))) novosErros.preco = 'O preço  informado precisa ser numérico'\n        else if ((preco + \"\").split(\".\").length > 2) novosErros.preco = 'O preço  informado precisa ser numérico'\n        return novosErros\n    }\n\n    const alteraDadosproduto = e => {\n        setProduto({ ...produto, [e.target.name]: e.target.value })\n\n\n        setErros({})\n    }\n\n    async function salvarproduto(e) {\n        e.preventDefault() // evita que a página seja recarregada  \n        const novosErros = validaErrosproduto()\n        //Existe algum erro no array?\n        if (Object.keys(novosErros).length > 0) {\n            //Sim, temos erros!\n            setErros(novosErros)\n        } else {\n            const metodo = produto.hasOwnProperty('_id') ? 'PUT' : 'POST'\n            produto.status = (produto.status === true || produto.status === 'ativo') ? 'ativo' : 'inativo'\n            setSalvandoprodutos(true)\n            let url = `${BACKEND}/produtos`\n            await fetch(url, {\n                method: metodo,\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(produto)\n            }).then(response => response.json())\n                .then(data => {\n                    (data._id || data.message) ? setAviso('Registro salvo com sucesso') : setAviso('')\n                    setProduto(valorInicial) //limpa a tela\n                    obterprodutos()\n                }).catch(function (error) {\n                    console.error(`Erro ao salvar a produto: ${error.message}`)\n                })\n            setSalvandoprodutos(false)\n        }\n    }\n\n    async function excluirproduto() {\n        let url = `${BACKEND}/produtos/${produto._id}`\n        await fetch(url, {\n            method: 'DELETE',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(response => response.json())\n            .then(data => {\n                data.message ? setAviso(data.message) : setAviso('')\n                setProduto(valorInicial)\n                obterprodutos()\n            })\n            .catch(function (error) {\n                console.error(`Erro ao excluir a produto: ${error.message}`)\n            })\n    }\n\n    function QrcodeAlert(produto) {\n        const MySwal = withReactContent(Swal)\n        MySwal.fire({\n            didOpen: () => {\n                // `MySwal` is a subclass of `Swal`\n                //   with all the same instance & static methods\n                MySwal.clickConfirm()\n            }\n        }).then(() => {\n            var qrCodeValue = (produto.numeroIdentificacao + \"\\n\"\n                + produto.descricao + \"\\n\"\n                + produto.preco + \"\\n\"\n                + produto.atributos + \"\\n\"\n                + produto.negocio + \"\\n\"\n                + produto.status + \"\\n\") + \"\";\n            return MySwal.fire(<QRCode value={qrCodeValue}/>)\n            \n        })\n    }\n\n    return (\n        <>\n            <Container fluid className=\"p-0\">\n                <Cabecalho />\n                <Row style={{ marginTop: \"30px\", marginBottom: \"30px\" }}>\n                    <Col xs={12} lg={12}>\n                        <b>\n                            <h3 className=\"text-center\"> Gerenciamento de Itens</h3>\n                        </b>\n                    </Col>\n                </Row>\n                <Form method=\"post\">\n                    <Form.Group as={Row} controlId=\"descricao\">\n                        <Form.Label column xs={2} lg={2} className=\"titulosFormulario\">Descrição:</Form.Label>\n                        <Col xs={9} lg={9} >\n                            <Form.Control\n                                className=\"camposFormulario\"\n                                name=\"descricao\"\n                                placeholder=\"Ex: 78983574100015\"\n                                onChange={alteraDadosproduto}\n                                value={descricao}\n                                isInvalid={!!erros.descricao}\n                            />\n                            <Form.Control.Feedback type='invalid'>\n                                {erros.descricao}\n                            </Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"atributos\">\n                        <Form.Label column xs={2} lg={2} className=\"titulosFormulario\">Atributos:</Form.Label>\n                        <Col xs={9} lg={9} >\n                            <Form.Control\n                                className=\"camposFormulario\"\n                                name=\"atributos\"\n                                placeholder=\"Ex: Tamanho; Altura; Comprimento; peso\"\n                                onChange={alteraDadosproduto}\n                                value={atributos}\n                                isInvalid={!!erros.atributos}\n                            />\n                            <Form.Control.Feedback type='invalid'>\n                                {erros.atributos}\n                            </Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"negocio\">\n                        <Form.Label column xs={2} lg={2} className=\"titulosFormulario\">Negócio:</Form.Label>\n                        <Col xs={9} lg={9} >\n                            <Form.Control\n                                className=\"camposFormulario\"\n                                name=\"negocio\"\n                                placeholder=\"Ex: Tamanho do estoque, frequência de reposição, pedido mínimo\"\n                                onChange={alteraDadosproduto}\n                                value={negocio}\n                                isInvalid={!!erros.negocio}\n                            />\n                            <Form.Control.Feedback type='invalid'>\n                                {erros.negocio}\n                            </Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"preco\">\n                        <Form.Label column xs={2} lg={2} className=\"titulosFormulario\">Preço:</Form.Label>\n                        <Col xs={2} lg={2} >\n                            <Form.Control\n                                className=\"camposFormulario\"\n                                name=\"preco\"\n                                placeholder=\"Ex: 19,90\"\n                                onChange={alteraDadosproduto}\n                                value={preco}\n                                isInvalid={!!erros.preco}\n                            />\n                            <Form.Control.Feedback type='invalid'>\n                                {erros.preco}\n                            </Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"numeroIdentificacao\">\n                        <Form.Label column xs={2} lg={2} className=\"titulosFormulario\">Código Identificação:</Form.Label>\n                        <Col xs={2} lg={2} >\n                            <Form.Control\n                                className=\"camposFormulario\"\n                                name=\"numeroIdentificacao\"\n                                placeholder=\"Ex: 78983574100015\"\n                                onChange={alteraDadosproduto}\n                                value={numeroIdentificacao}\n                                isInvalid={!!erros.numeroIdentificacao}\n                            />\n                            <Form.Control.Feedback type='invalid'>\n                                {erros.numeroIdentificacao}\n                            </Form.Control.Feedback>\n                        </Col>\n                    </Form.Group>\n                    <Form.Group as={Row} controlId=\"status\">\n                        <Col xs={2} lg={2} className=\"offset-lg-2 offset-xs-2\">\n                            <Form.Check type=\"checkbox\" label=\"Ativo\" name=\"status\"\n                                onChange={(e) => setProduto({ ...produto, [e.target.name]: e.target.checked })}\n                                checked={status} />\n                        </Col>\n                    </Form.Group>\n                    <Row style={{ marginBottom: \"10px\" }}>\n                        <Col xs={4} lg={4} className=\"offset-lg-8 offset-xs-8\">\n                            <Button style={{ marginRight: \"30px\" }} variant=\"primary\" type=\"submit\" title=\"Salvar o registro\"\n                                onClick={(e) => salvarproduto(e)}>\n                                {salvandoprodutos\n                                    ? <Spinner animation=\"border\" size=\"sm\" />\n                                    : <MdSave />\n                                }\n                                Salvar\n                            </Button>\n                            &nbsp;\n                            <Button variant=\"danger\" type=\"button\" title=\"Cancelar\"\n                                onClick={() => setProduto(valorInicial)}>\n                                <MdCancel /> Cancelar\n                            </Button>\n                        </Col>\n                    </Row>\n\n                </Form>\n                <Row>\n                    <Col xs={12} lg={12}>\n                        {/* Listagem das produtos */}\n                        {carregandoprodutos &&\n                            <>\n                                <Spinner animation=\"border\" size=\"sm\" />\n                                <Spinner animation=\"grow\" variant=\"info\" />\n                                <p>Aguarde, enquanto as produtos são carregados...</p>\n                            </>\n                        }\n                        <Table className=\"text-center\" striped bordered hover>\n                            <thead>\n                                <tr className=\"relatorio text-dark\">\n                                    <th>Código Identificacao</th>\n                                    <th>Descrição</th>\n                                    <th>Preço</th>\n                                    <th>Atributos</th>\n                                    <th>Negocio</th>\n                                    <th>Status</th>\n                                    <th>Data Criação</th>\n                                    <th>Opções</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {produtos.map(item => (\n                                    <tr key={item._id}>\n                                        <td>{item.numeroIdentificacao}</td>\n                                        <td>{item.descricao}</td>\n                                        <td>{item.preco}</td>\n                                        <td>{item.atributos}</td>\n                                        <td>{item.negocio}</td>\n                                        <td>{item.status}</td>\n                                        <td>{new Date(item.createdAt).toLocaleDateString()}</td>\n                                        <td>\n                                            <Button variant=\"outline-primary\" title=\"Editar o registro\"\n                                                onClick={() => {setProduto(item);window.scrollTo(0, 0)}}>\n                                                <MdModeEdit />\n                                            </Button>\n                                            &nbsp;\n                                            <Button variant=\"outline-danger\" title=\"Apagar o registro\"\n                                                onClick={() => {\n                                                    setProduto(item)\n                                                    setConfirmaExclusao(true)\n                                                }} >\n                                                <MdDelete />\n                                            </Button>\n                                            &nbsp;\n                                            <Button variant=\"outline-success\" type=\"button\" title=\"QRCode\"\n\n                                                onClick={() => QrcodeAlert(item)}>\n                                                <FaQrcode /> QRCode\n                                              </Button>\n\n                                        </td>\n                                    </tr>\n                                ))}\n                                <tr className=\"bg-dark text-light\">\n                                    <td colSpan=\"3\">Total de Registros:</td>\n                                    <td>{produtos.length}</td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Col>\n                </Row>\n\n                <Modal animation={false} show={confirmaExclusao} onHide={() => setConfirmaExclusao(false)}>\n                    <Modal.Header>\n                        <Modal.Title>Confirmação da Exclusão</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Confirma a exclusão da produto selecionado?\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => setConfirmaExclusao(!confirmaExclusao)}>\n                            ❌Cancelar\n                            </Button>\n                        <Button variant=\"success\"\n                            onClick={() => {\n                                setConfirmaExclusao(!confirmaExclusao)\n                                excluirproduto()\n                            }}>\n                            ✔️Confirmar\n                            </Button>\n                    </Modal.Footer>\n                </Modal>\n\n                <Toast\n                    onClose={() => setAviso('')}\n                    show={aviso.length > 0}\n                    animation={false}\n                    delay={4000}\n                    autohide\n                    className=\"bg-success\"\n                    style={{\n                        position: 'absolute',\n                        top: 10,\n                        right: 10\n                    }}>\n                    <Toast.Header>Aviso</Toast.Header>\n                    <Toast.Body className=\"text-light\">{aviso}</Toast.Body>\n                </Toast>\n\n                <Rodape />\n            </Container>\n        </>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport Inicio from '../pages/Inicio'\nimport Home from '../pages/Home'\n\nexport default function Rotas(){\n    return (\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/projectqrcode\" component={Home} />\n            </Switch>\n        </HashRouter>\n    )\n}","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Rotas from './routes/Rotas'\nimport './css/Layout.css'\n\nconst App = () => {\n  return (\n    <Rotas />\n  )\n}\n\nexport default App","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}